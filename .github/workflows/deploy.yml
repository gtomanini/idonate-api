name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v1
        with:
          java-version: '21'

      - name: Build with Maven
        run: mvn clean package

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: springboot-app
          path: target/*.jar


  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: springboot-app

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: springboot-app.jar
          target: /var/www/idonate-api/idonate.jar

      - name: Restart Spring Boot Service
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo systemctl restart springboot-app

#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 21
#        uses: actions/setup-java@v2
#        with:
#          java-version: '21'
#          distribution: 'temurin'
#
#      - name: Build with Maven
#        run: mvn clean install -DskipTests=true
#
#      - name: Check if JAR file exists
#        run: ls -l target/idonate-0.0.1-SNAPSHOT.jar
#
#      - name: Upload artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: springboot-app
#          path: target/*.jar
#
#      - name: Log in to EC2 via SSH and Deploy
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USER }}
#          key: ${{ secrets.EC2_KEY }}
#          port: 22
#          source: "target/idonate-0.0.1-SNAPSHOT.jar"
#          target: "/home/ubuntu"
#          debug: true
#          script: |
#            echo "Dados SSH. Host: ${{ secrets.EC2_HOST }}. Key: ${{ secrets.EC2_KEY }}"
#            cd /home/ubuntu/idonate-api
#            docker build -t idonate-api .
#            docker run -d -p 8080:8080 idonate-api

#      - name: Execute SSH command
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USER }}
#          key: ${{ secrets.EC2_KEY }}
#          script: |
#            pkill -f 'java -jar' || true
#            nohup java -jar /home/ec2-user/idonate-0.0.1-SNAPSHOT.jar > /dev/null 2>&1 &
